import os
basedir = os.path.abspath(os.path.dirname(__file__))

# BASIC APP CONFIG
WTF_CSRF_ENABLED = True
SECRET_KEY = 'test'
BIND_ADDRESS = '0.0.0.0'
PORT = 8080
LOGIN_TITLE = "PDNS"

# TIMEOUT - for large zones
TIMEOUT = 10

# LOG CONFIG
LOG_LEVEL = 'DEBUG'
# LOG_FILE = 'logfile.log'
# For Docker, leave empty string
LOG_FILE = ''

# Upload
#UPLOAD_DIR = os.path.join(basedir, 'upload')
UPLOAD_DIR = "/data/uploads"

# DATABASE CONFIG
#You'll need MySQL-python
# SQLA_DB_USER = 'powerdnsadmin'
# SQLA_DB_PASSWORD = 'powerdnsadminpassword'
# SQLA_DB_HOST = 'mysqlhostorip'
# SQLA_DB_NAME = 'powerdnsadmin'

#MySQL
# SQLALCHEMY_DATABASE_URI = 'mysql://'+SQLA_DB_USER+':'\
    # +SQLA_DB_PASSWORD+'@'+SQLA_DB_HOST+'/'+SQLA_DB_NAME
#SQLite
SQLALCHEMY_DATABASE_URI = 'sqlite:////data/padmin.sqlite'
SQLALCHEMY_MIGRATE_REPO = os.path.join(basedir, 'db_repository')
SQLALCHEMY_TRACK_MODIFICATIONS = True

# Github Oauth
GITHUB_OAUTH_ENABLE = False

#Default Auth
BASIC_ENABLED = False
SIGNUP_ENABLED = False

# POWERDNS CONFIG
PDNS_STATS_URL = 'http://master/api/v1/'
PDNS_API_KEY = '1234'
PDNS_VERSION = '4.0.3'

# RECORDS ALLOWED TO EDIT
RECORDS_ALLOW_EDIT = ['A', 'SOA', 'AAAA', 'CNAME', 'SPF', 'PTR', 'MX', 'TXT']

# EXPERIMENTAL FEATURES
PRETTY_IPV6_PTR = False
